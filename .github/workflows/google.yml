# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to Gcloud repo

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: ${{secrets.REGION}} # TODO: update region of the Artifact Registry
  APP_NAME: dashboard
  DEPLOYMENT_NAME: docker-build-test # TODO: update to deployment name
  REGISTRY_NAME: ${{secrets.ARTIFACT_REGISTRY_NAME}} # TODO: update to Artifact Registry docker repository
  SERVICE_ACCOUNT_EMAIL: ${{secrets.SERVICE_ACCOUNT_EMAIL}}
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: setup Npm
      uses: actions/setup-node@v2
      with:
        node-version: 20
        
    - name: Install dependencies
      run: npm install
      
    - name: Build Application
      run: npm run build
      
    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1.1.1'
      with:
        credentails_json: "${{secrets.GCP_SA_KEY}}"
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$REGION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$APP_NAME:$GITHUB_SHA"
          # --build-arg GITHUB_SHA="$GITHUB_SHA" \
          # --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$REGION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$IMAGE:$GITHUB_SHA"
